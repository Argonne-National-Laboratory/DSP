language: cpp

matrix:
  include:
    - os: linux
      dist: bionic
      compiler: clang
      addons:
        ssh_known_hosts: xgitlab.cels.anl.gov
        apt:
          packages:
            - libblas-dev
            - liblapack-dev
            - libtbb-dev
    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        ssh_known_hosts: xgitlab.cels.anl.gov
        apt:
          packages:
            - libblas-dev
            - liblapack-dev
            - libtbb-dev
    - os: linux
      dist: xenial
      compiler: clang
      env:
        - GFORTRAN='gfortran-9'
      addons:
        ssh_known_hosts: xgitlab.cels.anl.gov
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gfortran-9
            - libblas-dev
            - liblapack-dev
            - libtbb-dev
    - os: linux
      dist: xenial
      compiler: gcc
      env:
        - GFORTRAN='gfortran-9'
      addons:
        ssh_known_hosts: xgitlab.cels.anl.gov
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages: 
            - gfortran-9
            - libblas-dev
            - liblapack-dev
            - libtbb-dev
    - os: osx
      osx_image: xcode11.4
      compiler: clang
      addons:
        ssh_known_hosts: xgitlab.cels.anl.gov
        homebrew:
          packages:
            - git-lfs
            - tbb
          update: true
    - os: osx
      osx_image: xcode11.4
      compiler: gcc
      addons:
        ssh_known_hosts: xgitlab.cels.anl.gov
        homebrew:
          packages:
            - git-lfs
            - tbb
          update: true

before_install:
  - if [ -z "${GFORTRAN}" ]; then export GFORTRAN='gfortran'; fi
  - ${GFORTRAN} -v
  - openssl aes-256-cbc -K $encrypted_db2095f63ba3_key -iv $encrypted_db2095f63ba3_iv -in deploy_rsa.enc -out /tmp/deploy_rsa -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/deploy_rsa
  - ssh-add /tmp/deploy_rsa
  - if [ $TRAVIS_OS_NAME == osx ]; then git lfs install; fi
  - git clone git@xgitlab.cels.anl.gov:kimk/DSPThirdPartyLibs.git
  - cd DSPThirdPartyLibs
  - if [ $TRAVIS_OS_NAME == linux ]; then sh ./SCIPOptSuite-7.0.0-Linux.sh --skip-license; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sed -i 's|set(SCIPOPT_INC_DIR \"\"|set(SCIPOPT_INC_DIR \"'"$PWD"'/include\"|g' ../UserConfig.cmake; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sed -i 's|set(SCIPOPT_LIB_DIR \"\"|set(SCIPOPT_LIB_DIR \"'"$PWD"'/lib\"|g' ../UserConfig.cmake; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then export PATH=/usr/local/lib:$PATH; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then export LD_LIBRARY_PATH=$PWD/lib:$LD_LIBRARY_PATH; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then export LD_LIBRARY_PATH=$(dirname `${GFORTRAN} --print-file-name libgfortran.so`):/usr/local/lib:$LD_LIBRARY_PATH; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then sh ./SCIPOptSuite-7.0.0-Darwin.sh --skip-license; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then sed -i'' -e 's|set(SCIPOPT_INC_DIR \"\"|set(SCIPOPT_INC_DIR \"'"$PWD"'/include\"|g' ../UserConfig.cmake; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then sed -i'' -e 's|set(SCIPOPT_LIB_DIR \"\"|set(SCIPOPT_LIB_DIR \"'"$PWD"'/lib\"|g' ../UserConfig.cmake; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then export PATH=/usr/local/lib:$PATH; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then export DYLD_LIBRARY_PATH=$PWD/lib:$DYLD_LIBRARY_PATH; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then export DYLD_LIBRARY_PATH=$(dirname `${GFORTRAN} --print-file-name libgfortran.dylib`):/usr/local/lib:$DYLD_LIBRARY_PATH; fi
  - echo $LD_LIBRARY_PATH
  - echo $DYLD_LIBRARY_PATH
  - cat ../UserConfig.cmake
  - cd ..

install:
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=DEBUG ..
  - make

script:
  - ctest --verbose