language: cpp

matrix:
  include:
    - os: linux
      dist: bionic
      compiler: clang
      addons:
        ssh_known_hosts: xgitlab.cels.anl.gov
        apt:
          packages:
            - gfortran
            - libblas-dev
            - liblapack-dev
            - libtbb-dev
            - lcov
            - llvm-cov
    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        ssh_known_hosts: xgitlab.cels.anl.gov
        apt:
          packages:
            - gfortran
            - libblas-dev
            - liblapack-dev
            - libtbb-dev
            - lcov
    - os: osx
      osx_image: xcode11.4
      compiler: clang
      addons:
        ssh_known_hosts: xgitlab.cels.anl.gov
        homebrew:
          packages:
            - git-lfs
            - tbb
            - lcov
          update: true
    - os: osx
      osx_image: xcode11.4
      compiler: gcc
      addons:
        ssh_known_hosts: xgitlab.cels.anl.gov
        homebrew:
          packages:
            - git-lfs
            - tbb
            - lcov
          update: true

before_install:
  - openssl aes-256-cbc -K $encrypted_db2095f63ba3_key -iv $encrypted_db2095f63ba3_iv -in deploy_rsa.enc -out /tmp/deploy_rsa -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/deploy_rsa
  - ssh-add /tmp/deploy_rsa
  - if [ $TRAVIS_OS_NAME == osx ]; then git lfs install; fi
  - git clone git@xgitlab.cels.anl.gov:kimk/DSPThirdPartyLibs.git
  - cd DSPThirdPartyLibs
  - ./travis.sh
  - if [ $TRAVIS_OS_NAME == linux ]; then export LD_LIBRARY_PATH=$PWD/lib:$(dirname `gfortran --print-file-name libgfortran.so`):$LD_LIBRARY_PATH; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then export DYLD_LIBRARY_PATH=$PWD/scip/build/lib:$(dirname `gfortran --print-file-name libgfortran.dylib`):$DYLD_LIBRARY_PATH; fi
  - cd ..

install:
  - mkdir build && cd build && cmake .. -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=DEBUG
  - make -j
  - make install

script:
  - ctest --verbose

after_success:
# Create lcov report
- if [ $TRAVIS_OS_NAME == linux && $TRAVIS_COMPILER == clang ]; then lcov --capture --directory . --gcov-tool $TRAVIS_BUILD_DIR/llvm-gcov.sh --output-file coverage.info; fi
- if [ $TRAVIS_OS_NAME == osx || $TRAVIS_COMPILER == gcc ]; then lcov --capture --directory . --output-file coverage.info; fi
- lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
- lcov --list coverage.info # debug info
# Uploading report to CodeCov
- bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
