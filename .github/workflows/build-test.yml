name: Build test

on: [push, pull_request]

jobs:
  test-github-cpuonly:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-18.04]
        compiler: [gcc, clang] 

    steps:
      - name: Set my secrets
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Checkout DSP
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Checkout DSPThirdPartyLibs
        uses: actions/checkout@v2
        with:
          repository: kibaekkim/DSPThirdPartyLibs
          path: DSPThirdPartyLibs
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          lfs: true
      - name: Run cmake, build, and test
        env:
          MYOS: ${{ matrix.os }}
          CC: ${{ matrix.compiler }}
          FC: gfortran-9
        run: |
          cd DSPThirdPartyLibs
          ./github.sh
          cd ..
          mkdir build
          cd build
          if [ ${{ matrix.compiler }} == gcc ]; then export CXX=g++; fi
          if [ ${{ matrix.compiler }} == clang ]; then export CXX=clang++; fi
          cmake .. -DUNIT_TESTING=ON -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=DEBUG
          make -j
          make install
      - name: Run test
        run: |
          cd build
          ./src/test/UnitTests
          ctest
          if [ ${{ matrix.os }} == ubuntu-18.04 ] && [ ${{ matrix.compiler }} == gcc ]
          then
            sudo apt-get update -y
            sudo apt-get install -y lcov
            lcov --capture --directory . --output-file coverage.info
            lcov --remove coverage.info '/usr/*' --output-file coverage.info
          fi
      - uses: codecov/codecov-action@v1
        with:
          file: ./build/coverage.info
